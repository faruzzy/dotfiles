#     ███       ▄▄▄▄███▄▄▄▄   ███    █▄  ▀████    ▐████▀
# ▀█████████▄ ▄██▀▀▀███▀▀▀██▄ ███    ███   ███▌   ████▀
#    ▀███▀▀██ ███   ███   ███ ███    ███    ███  ▐███
#     ███   ▀ ███   ███   ███ ███    ███    ▀███▄███▀
#     ███     ███   ███   ███ ███    ███    ████▀██▄
#     ███     ███   ███   ███ ███    ███   ▐███  ▀███
#     ███     ███   ███   ███ ███    ███  ▄███     ███▄
#    ▄████▀    ▀█   ███   █▀  ████████▀  ████       ███▄
#

# https://tmux.reconquest.io/
# 256-color terminal
set -g default-terminal "xterm-256color"

# In order for Tmux to do its magic focus-events option has to be set to on.
set -g focus-events on

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
set -g @continuum-boot 'on'

# start iTerm in fullscreen
set -g @continuum-boot-options 'iterm,fullscreen'

set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g status-interval 1

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------

#Change bind key to ctrl-x
unbind-key c-b
set-option -g prefix c-x

# Index starts from -1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

#History
set-option -g history-limit 102401

#Mouse
set-option -g mouse on

#vi-mode
set-window-option -g mode-keys vi
set-option -g status-keys vi

# Vi style copy to clipboard.
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# Vi-style copy paste https://github.com/tmux/tmux/issues/592
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-window-option -g mode-mouse on

set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/bash"

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-x
bind-key c-x last-window

# prefix x
bind-key x send-prefix

# prefix |
bind-key \ split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Back and forth
bind-key bspace previous-window
bind-key space next-window
bind-key / next-layout # Overridden

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "vim ~/.tmux.conf"set -g default-command "reattach-to-user-namespace -l /usr/local/bin/bash"

# Set window split
# Bind function keys.
bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4
bind -n F5 select-window -t 5
bind -n F6 select-window -t 6
bind -n F7 select-window -t 7
bind -n F8 select-window -t 8
bind -n F9 select-window -t 9
bind -n F10 select-window -t 0

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------

set-option -g status-justify left
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
set-option -g status-bg colour237
set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60

set-option -g pane-active-border-fg colour240
set-option -g pane-border-fg colour238

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------

# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# select-pane (@george-b)
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

# -------------------------------------------------------------------


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
				 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
				 ($is_fzf && tmux send-keys C-j) || \
				 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
				 ($is_fzf && tmux send-keys C-k)  || \
				 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
				 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
