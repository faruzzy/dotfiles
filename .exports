#!/usr/bin/env bash

# Editor Configuration
export EDITOR="nvim"
export VISUAL="nvim"

# Pager Configuration
export MANPAGER="less -X"  # Don't clear the screen after quitting a manual page
export LESS='-R -M --shift 5'  # Better less defaults
export LESSOPEN='|bat --color=always %s 2>/dev/null || cat %s'  # Syntax highlighting in less (if bat is available)

# Locale Configuration
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# History Configuration
export HISTSIZE=10000           # Commands in memory
export HISTFILESIZE=32768       # Commands in history file
export HISTCONTROL=ignoreboth:erasedups  # Ignore duplicates and commands starting with space
export HISTTIMEFORMAT="%Y/%m/%d %H:%M:%S:   "
export HISTIGNORE="cd:cd -:pwd:exit:date:* --help:ls:ll:la:clear:history"

# Terminal Configuration
export CLICOLOR=1
export TERM='xterm-256color'

# Grep Configuration (deprecated GREP_OPTIONS replaced with alias)
# Note: GREP_OPTIONS is deprecated, use alias instead in .aliases file

# NodeJS Configuration
export NODE_REPL_HISTORY=~/.node_history
export NODE_REPL_HISTORY_SIZE='32768'
export NODE_REPL_MODE='sloppy'

# FZF Configuration
export FZF_DEFAULT_OPTS_FILE="$HOME/github/dotfiles/fzfrc"

# FZF Command Configuration (with fallback chain)
if command -v fd > /dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --exclude node_modules'
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git --exclude node_modules'
    export FZF_CTRL_T_COMMAND='fd --type f --type d --hidden --follow --exclude .git --exclude node_modules'
elif command -v rg > /dev/null; then
    export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git/*" --glob "!node_modules/*"'
    export FZF_CTRL_T_COMMAND='rg --files --hidden --glob "!.git/*" --glob "!node_modules/*"'
elif command -v ag > /dev/null; then
    export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git --ignore node_modules -g ""'
    export FZF_CTRL_T_COMMAND='ag --hidden --ignore .git --ignore node_modules -g ""'
else
    export FZF_DEFAULT_COMMAND='find . -type f \( -path "*/.git/*" -o -path "*/node_modules/*" \) -prune -o -print'
    export FZF_CTRL_T_COMMAND='find . -type f \( -path "*/.git/*" -o -path "*/node_modules/*" \) -prune -o -print'
fi

# FZF Preview Configuration
if command -v bat > /dev/null; then
    export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always {}' --preview-window=right:60%"
elif command -v highlight > /dev/null; then
    export FZF_CTRL_T_OPTS="--preview 'highlight -O ansi -l {} 2> /dev/null || cat {}'"
else
    export FZF_CTRL_T_OPTS="--preview 'head -200 {}'"
fi

# Directory preview for Alt+C
if command -v tree > /dev/null; then
    export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
elif command -v ls > /dev/null; then
    export FZF_ALT_C_OPTS="--preview 'ls -la {} | head -200'"
fi

# Alternative directory listing (if blsd is available)
command -v blsd > /dev/null && export FZF_ALT_C_COMMAND='blsd'

# Java Configuration
# Only set JAVA_HOME if jenv is not managing Java versions
if ! command -v jenv > /dev/null; then
    export JAVA_HOME=$(/usr/libexec/java_home 2>/dev/null)
fi

# Development Tools Configuration
# PostgreSQL
export PSQL="/usr/local/bin"

# Script directory (customize as needed)
export SCRIPT_HOME="$HOME/scripts"

# PATH Configuration
# Clean and organize PATH - remove duplicates and ensure proper ordering
path_dirs=(
    "$HOME/.local/share/bob/nvim-bin"
    "$HOME/.local/bin"
    "$HOME/bin"
    "/opt/homebrew/bin"
    "/opt/homebrew/sbin"
    "/usr/local/bin"
    "/usr/local/sbin"
    "/usr/bin"
    "/usr/sbin"
    "/bin"
    "/sbin"
    "/usr/local/opt/libpq/bin"
    "$PSQL"
    "$SCRIPT_HOME"
)


# Build PATH from array, checking that directories exist
new_path=""
for dir in "${path_dirs[@]}"; do
    if [[ -d "$dir" && ":$new_path:" != *":$dir:"* ]]; then
        if [[ -z "$new_path" ]]; then
            new_path="$dir"
        else
            new_path="$new_path:$dir"
        fi
    fi
done

# Append any remaining PATH entries that weren't explicitly included
IFS=':' read -ra existing_paths <<< "$PATH"
for dir in "${existing_paths[@]}"; do
    if [[ -n "$dir" && ":$new_path:" != *":$dir:"* ]]; then
        new_path="$new_path:$dir"
    fi
done

export PATH="$new_path"

# Development Environment Shortcuts
export PROJECTS_DIR="$HOME/projects"
export DOTFILES_DIR="$HOME/github/dotfiles"

# Modern CLI Tools Configuration
# Use modern alternatives if available
command -v exa > /dev/null && export EXA_COLORS="di=1;34:ln=1;36:so=32:pi=33:ex=1;32:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43"

# Bat configuration
export BAT_THEME="Sublime Snazzy"

# Ripgrep configuration
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

# Additional helpful exports
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1
